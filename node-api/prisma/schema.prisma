generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  password      String
  profile_image String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  roleId        Int
  role          Role     @relation(fields: [roleId], references: [id])

  // --- MUDANÇA: Adiciona a relação com Grupos ---
  groups        Group[]  // Indica que um usuário pode estar em vários grupos

  @@map("users")
}

model PasswordReset {
  id        Int      @id @default(autoincrement())
  email     String
  token     String   @unique
  createdAt DateTime @default(now())

  @@map("password_resets")
}

model Credential {
  id        String   @id @default(cuid())
  name      String
  path      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("credentials")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users     User[]

  @@map("roles")
}

// --- NOVO MODELO: Tabela dedicada para armazenar os Grupos ---
model Group {
  id        Int      @id @default(autoincrement())
  name      String   @unique // Garante que não hajam grupos com nomes duplicados
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users     User[]   // Indica que um grupo pode ter vários usuários

  @@map("groups")
}